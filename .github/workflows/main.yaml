name: Python CI/CD

on:
  push:
    branches:
      - main  # Triggers the action on every push to the "main" branch
  pull_request:
    branches:
      - main  # Also runs when a pull request is made to the "main" branch

jobs:
  build-test-deploy:

    runs-on: ubuntu-latest  # Use the latest version of Ubuntu

    steps:
    - name: Checkout code
      uses: actions/checkout@v3  # This checks out the code from your repository

    - name: Set up Python
      uses: actions/setup-python@v4  # Set up the Python version
      with:
        python-version: '3.10'  

    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt  # Install dependencies from the requirements.txt

    - name: Verify pytest-cov installation
      run: |
        pip show pytest-cov  # Verify that pytest-cov is installed

    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=${{ github.workspace }}" >> $GITHUB_ENV

    - name: Set Environment Variables
      run: |
        echo "DATA_FILE=weather_forecast_csv/processed_weatherHistory.csv" >> $GITHUB_ENV

    - name: Run tests with coverage
      run: |
        pytest -v --cov=src tests/  # Run tests with coverage reporting

    - name: Run data preprocessing and model selection
      run: |
        python src/data_preprocessing.py  # Preprocessing step
        python src/model_selection.py  # Model selection and training

    - name: Replace placeholders in best_model_pipeline.py
      run: |
        sed -i 's|PATH/TO/DATA/FILE|weather_forecast_csv/processed_weatherHistory.csv|g' best_model_pipeline.py
        sed -i 's|COLUMN_SEPARATOR|,|g' best_model_pipeline.py
        sed -i "s/'target'/'Temperature (C)'/g" best_model_pipeline.py

    - name: Verify placeholder replacement
      run: |
        grep 'weather_forecast_csv/processed_weatherHistory.csv' best_model_pipeline.py
        grep "sep=','" best_model_pipeline.py

    - name: Print best_model_pipeline.py contents
      run: |
        cat best_model_pipeline.py

    - name: Run LIME Explainability
      run: |
        python src/lime_explainability.py  # LIME explainability step

    - name: Run SHAP Explainability
      run: |
        python src/shap_explainability.py  # SHAP explainability step

    - name: Upload LIME Explanation as Artifact
      uses: actions/upload-artifact@v3
      with:
        name: lime-explanation
        path: lime_explanation.html

    - name: Upload SHAP Summary Plot as Artifact
      uses: actions/upload-artifact@v3
      with:
        name: shap-summary-plot
        path: shap_summary_plot.png